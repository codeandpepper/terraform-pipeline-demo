name: 'Development deploy'

on:
  push:
    branches: 
      - master

env:
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_docker_url: ${{ secrets.DOCKER_URL }}
  TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
  TF_VAR_docker_password: ${{ secrets.DOCKER_PASSWORD }}
  TF_VAR_tag: ${{ github.sha }}

jobs:
  build_app:
    name: 'Build App'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: azure/docker-login@v1
      name: Build App docker image
      with:
        login-server: ${{ secrets.DOCKER_URL }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - run: |
        cd demo-app
        docker build -t ${{ secrets.DOCKER_URL }}/demo-app:${{ github.sha }} .
        docker tag ${{ secrets.DOCKER_URL }}/demo-app:${{ github.sha }} ${{ secrets.DOCKER_URL }}/demo-app:latest-dev
        docker push ${{ secrets.DOCKER_URL }}/demo-app

  terraform:
    name: 'Update'
    needs: [build_app]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.12.25

    - name: Terraform Format
      id: fmt
      run: terraform fmt
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform select Workspace
      id: workspace
      run: terraform workspace select dev

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Apply
      run: terraform apply -auto-approve
